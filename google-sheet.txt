alert('test');
var payment = document.forms['registration']['payment_method'].value;
if (payment == '') {
	alert('Please select a payment method');
	return false;
}
alert(payment);
if (payment == 'Paypal') {
    window.paypalCheckoutReady = function() {
        paypal.checkout.setup("5A528G7WWDU6W", {
            environment: 'sandbox',
            click: function(event) {
                event.preventDefault();

                paypal.checkout.initXO();
                $.support.cors = true;
                $.ajax({
                    url: "http://166.78.8.98/cgi-bin/aries.cgi?sandbox=1&direct=1&returnurl=http://166.78.8.98/cgi-bin/return.htm&cancelurl=http://166.78.8.98/cgi-bin/cancel.htm",
                    type: "GET",
                    data: '&ajax=1&onlytoken=1',   
                    async: true,
                    crossDomain: true,

                    //Load the minibrowser with the redirection url in the success handler
                    success: function (token) {
                        var url = paypal.checkout.urlPrefix +token;
                        //Loading Mini browser with redirect url, true for async AJAX calls
                        paypal.checkout.startFlow(url);
                    },
                    error: function (responseData, textStatus, errorThrown) {
                        alert("Error in ajax post"+responseData.statusText);
                        //Gracefully Close the minibrowser in case of AJAX errors
                        paypal.checkout.closeFlow();
                    }
                });
            },
            buttons: [
              { container: 't1' }, { container: 't2' }]
        });
    }
}


// Variable to hold request
var request;

// Bind to the submit event of our form
$("#foo").submit(function(event){
/*
	// Form validation
	var name = document.forms['registration']['name'].value;
	if (name == '') {
		alert('Please enter your name');
		return false;
	}
	var email = document.forms['registration']['email'].value;
	if (email == '') {
		alert('Please enter your email address');
		return false;
	}
	var institution = document.forms['registration']['institution'].value;
	if (institution == '') {
		alert('Please enter your institution');
		return false;
	}
	var location = document.forms['registration']['location'].value;
	if (location == '') {
		alert('Please enter the location of your institution');
		return false;
	}
	var reg_type = document.forms['registration']['registration_type'].value;
	if (reg_type == '') {
		alert('Please select your registration type');
		return false;
	}
*/

    // Abort any pending request
    if (request) {
        request.abort();
    }
    // setup some local variables
    var $form = $(this);

    // Let's select and cache all the fields
    var $inputs = $form.find("input, select, button, textarea");

    // Serialize the data in the form
    var serializedData = $form.serialize();

    // Let's disable the inputs for the duration of the Ajax request.
    // Note: we disable elements AFTER the form data has been serialized.
    // Disabled form elements will not be serialized.
    $inputs.prop("disabled", true);

    // Fire off the request to /form.php
    request = $.ajax({
        url: "https://script.google.com/macros/s/AKfycbyPt55x_O8N8MTxbLOb2x1Oufub_Vyeyw3zxWlwUZYYtu-O1MQ/exec",
        type: "post",
        data: serializedData
    });

    // Callback handler that will be called on success
    request.done(function (response, textStatus, jqXHR){
        // Log a message to the console
		if (payment == 'paypal') {
			var action = "https://www.paypal.com/cgi-bin/webscr";
			$('#foo').attr('action', action);
		}
		
		alert("You have succesfully submitted your registration to ISRE 2017")
		$('#foo')[0].reset();
        console.log("Hooray, it worked!");
        console.log(response);
        console.log(textStatus);
        console.log(jqXHR);
    });

    // Callback handler that will be called on failure
    request.fail(function (jqXHR, textStatus, errorThrown){
        // Log the error to the console
        console.error(
            "The following error occurred: "+
            textStatus, errorThrown
        );
    });

    // Callback handler that will be called regardless
    // if the request failed or succeeded
    request.always(function () {
        // Reenable the inputs
        $inputs.prop("disabled", false);
    });

    // Prevent default posting of form
    event.preventDefault();
});